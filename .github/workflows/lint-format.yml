name: lint-format

on: workflow_dispatch

permissions:
  contents: write
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check for changes in C++ files
        id: check_changes
        run: |
          git fetch origin main
          if git diff --name-only origin/main ${{ github.sha }} | grep -E '\.(cpp|hpp|c|h)$' -q; then
            echo "files_modified=true" >> $GITHUB_ENV
          else
            echo "files_modified=false" >> $GITHUB_ENV
          fi

      # Cache apt packages
      - name: Cache apt packages
        if: env.files_modified == 'true'
        uses: actions/cache@v3
        id: cache-apt
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-cache

      - name: Check if apt cache was hit
        if: env.files_modified == 'true'
        run: |
          if [ "${{ steps.cache-apt.outputs.cache-hit }}" == 'true' ]; then
            echo "Apt cache hit"
          else
            echo "Apt cache miss"
          fi

      # Install SDL dependencies to help build understand SDL header includes
      - name: Install SDL dependencies
        if: env.files_modified == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            cmake \
            clang \
            libsdl2-2.0-0 \
            libsdl2-dev

      - name: Create build directory
        if: env.files_modified == 'true'
        run: |
          rm -rf build
          mkdir -p build
          cd build
          cmake -DCMAKE_CXX_COMPILER=clang++ ..

      - name: Run linter
        if: env.files_modified == 'true'
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: "18"
          style: "file"
          tidy-checks: ""
          no-lgtm: false
          thread-comments: true
          step-summary: true
          tidy-review: true
          format-review: true
          database: "./build/compile_commands.json"
          ignore: "lib"

      - name: Report failure
        if: steps.linter.outputs.checks-failed != '0' && env.files_modified == 'true'
        run: exit 1

      - name: Report Success
        if: env.files_modified == 'false'
        run: exit 0
