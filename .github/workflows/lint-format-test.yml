# This workflow performs linting and formatting checks based on
# our defined clang-format and clang-tidy configurations.

# The workflow is triggered on pull requests and checks for changes in C++ files.
# If changes are detected, the workflow installs grabs the latest
# Docker container, and runs linting/formatting tests.

# If the checks pass, the workflow will report success. If the checks fail,
# the workflow will report failure.

name: lint-format-test

on: [pull_request, workflow_dispatch]

jobs:
  lint-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Pull Docker image from GHCR
        run: |
          docker pull ghcr.io/bgevko/nes-emu/build-lint-container:2.0

      - name: Run Linter
        run: |
          docker run -e CI=${CI} -v $(pwd):/workspace -w /workspace ghcr.io/bgevko/nes-emu/build-lint-container:2.0 build
          docker run -e CI=${CI} -v $(pwd):/workspace -w /workspace ghcr.io/bgevko/nes-emu/build-lint-container:2.0 lint

      - name: Run Nestest ROM
        run: |
          mkdir ./tests/output
          touch ./tests/output/my_nestest-log.txt
          chmod ugo+rw ./tests/output/my_nestest-log.txt
          # Use the same build as the linter
          docker run -e CI=${CI} -v $(pwd):/workspace -w /workspace ghcr.io/bgevko/nes-emu/build-lint-container:latest test "RomTests.Nestest"
